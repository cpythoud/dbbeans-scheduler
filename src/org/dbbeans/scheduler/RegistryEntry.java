// Generated by BeanMaker, on March 31, 2018 2:45:41 AM CEST
// Library Version #0.9.12-beta

package org.dbbeans.scheduler;

import java.sql.ResultSet;
import java.sql.SQLException;

import java.util.logging.Level;

public class RegistryEntry extends RegistryEntryBase {
	public RegistryEntry() { }

	public RegistryEntry(final long id) {
		super(id);
	}

	public RegistryEntry(final RegistryEntry registryEntryModel) {
		super(registryEntryModel);
	}

	protected RegistryEntry(final long id, final String code, final long idType, final boolean active) {
		super(id, code, idType, active);
	}

	protected RegistryEntry(final ResultSet rs) throws SQLException {
		super(rs);
	}

	void execute(Scheduler scheduler) {
		String baseLogMessage = "Executing registry entry #" + getId() + " " + getCode();
		scheduler.log(Level.FINER, baseLogMessage);
		try {
			getInstance().execute();
		} catch (final Throwable throwable) {
			scheduler.log(Level.WARNING, baseLogMessage + ", exception thrown: " + throwable.getClass());
			scheduler.reportException(throwable, this);
		}
	}

	private PlannedTask getInstance() throws ClassNotFoundException, InstantiationException, IllegalAccessException {
		return (PlannedTask) Class.forName(getType().getJavaClass()).newInstance();
	}
}

